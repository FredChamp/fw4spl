<extension implements="::fwServices::registry::AppConfig2">
    <id>VolumeRendering</id>
    <parameters>
        <!-- activity parameters -->
        <param name="WID_PARENT" />
        <param name="SERIESDB" />
        <param name="AS_UID" />
        <param name="ICON_PATH" />

        <!-- data -->
        <param name="image" />
        <param name="patient_name" default="" />
        <param name="optionalModelSeriesComposite" />
    </parameters>

        <!-- input image -->
    <config>
        <!-- activity -->
        <object uid="${SERIESDB}" type="::fwMedData::SeriesDB" src="ref" />
        <object uid="${AS_UID}" type="::fwMedData::ActivitySeries" src="ref" />

        <!-- input image -->
        <object uid="${image}" type="::fwData::Image" src="ref" />

        <!-- Transfer function -->
        <object uid="TFSet" type="::fwData::Composite" src="deferred" />
        <object uid="TFSelections" type="::fwData::Composite" />

        <!-- optional model series -->
        <object uid="${optionalModelSeriesComposite}" type="::fwData::Composite" src="ref" />
        <object uid="optionalModelSeries" type="::fwData::Image" src="deferred" />

        <!-- scene 2D -->
        <object uid="Viewport" type="::scene2D::data::Viewport" />
        <object uid="Histogram" type="::fwData::Histogram" />
        <object uid="HistogramPoint" type="::fwData::Point" />

        <service uid="mainView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::CardinalLayoutManager">
                    <view caption="VR" align="center" />
                    <view align="right" minWidth="450" />
                </layout>
                <toolBar />
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <toolBar sid="toolBar" start="yes" />
                <view sid="vr" start="no" />
                <view sid="tf" start="yes" />
            </registry>
        </service>

        <service uid="tf" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" minHeight="30" />
                    <view proportion="1" />
                </layout>
            </gui>
            <registry>
                <view sid="tfm" start="no" />
                <view sid="tfmTab" start="yes" />
            </registry>
        </service>

        <service uid="tfmTab" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::TabLayoutManager">
                    <view caption="TF-Negato" />
                    <view caption="TF-Scene2D" />
                </layout>
            </gui>
            <registry>
                <view wid="view_negato" />
                <view sid="TFScene2D" start="yes" />
            </registry>
        </service>

        <service uid="toolBar" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <menuItem name="Hide cross" icon="@BUNDLE_PREFIX@/media_0-1/icons/HideCross.png" style="radio" />
                    <menuItem name="Show normal cross" icon="@BUNDLE_PREFIX@/media_0-1/icons/NormalCross.png" style="radio" />
                    <menuItem name="Show full cross" icon="@BUNDLE_PREFIX@/media_0-1/icons/FullCross.png" style="radio" />
                    <separator />
                    <menuItem name="Show 3d slice cursor" icon="@BUNDLE_PREFIX@/media_0-1/icons/icon-landmark.png" style="check" />
                    <menuItem name="Show mesh" icon="@BUNDLE_PREFIX@/media_0-1/icons/icon-3D.png" style="check" />
                    <menuItem name="Manage organs color" icon="@BUNDLE_PREFIX@/media_0-1/icons/ManageOrgan.png" style="check" />
                    <separator />
                    <menuItem name="Show/hide box cropping" icon="@BUNDLE_PREFIX@/media_0-1/icons/icon-box.png" style="check" />
                    <menuItem name="Reset box cropping" icon="@BUNDLE_PREFIX@/media_0-1/icons/icon-box-reset.png" />
                    <separator />
                    <menuItem name="Snapshot VR" icon="@BUNDLE_PREFIX@/media_0-1/icons/camera-photo.png" />
                    <separator />
                    <menuItem name="Export Activity" icon="@BUNDLE_PREFIX@/media_0-1/icons/Export.svg" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="ActionHideCross" start="yes" />
                <menuItem sid="ActionShowNormalCross" start="yes" />
                <menuItem sid="ActionShowFullCross" start="yes" />

                <menuItem sid="ActionShowSliceCursor" start="no" />
                <menuItem sid="ActionShowMesh" start="yes" />
                <menuItem sid="action_organManager" start="no" />

                <menuItem sid="ActionShowHideBoxWidget" start="yes" />
                <menuItem sid="ActionResetBoxWidget" start="yes" />

                <menuItem sid="ActionSnapshotVR" start="yes" />

                <menuItem sid="ActionExportActivity" start="yes" />
            </registry>
        </service>

        <service uid="TFScene2D" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" minHeight="100" />
                    <view proportion="1" />
                    <view proportion="0" minHeight="30" />
                </layout>
            </gui>
            <registry>
                <view sid="Scene2D_Shutter" start="no" />
                <view sid="Scene2D" start="no" />
                <view sid="FloatEditor" start="no" />
            </registry>
        </service>

        <service uid="ActionExportActivity" type="::uiMedData::action::SExportSeries" autoConnect="yes">
            <inout key="seriesDB" uid="${SERIESDB}" />
            <inout key="series" uid="${AS_UID}" />
        </service>

        <!-- GENERIC SCENE DEFINITION -->

<!--        <service uid="ActionShowSliceCursor" type="::gui::action::SPushObject" type="::fwGui::IActionSrv">
            <push src="VisuComposite[imageKey]" key="imageKeyCursor" />
        </service>-->

        <service uid="ActionShowMesh" type="::gui::action::SPushObject">
            <inout key="source" uid="${optionalModelSeriesComposite}" />
            <out key="destination" uid="optionalModelSeries" />
            <push srcKey="optionalModelSeriesKey" />
        </service>

        <service uid="action_organManager" type="::gui::action::SConfigLauncher" >
            <appConfig id="OrganManagerWithSeries" />
            <inout key="ORGAN_MANAGER_MODELSERIES" uid="optionalModelSeries"/>
            <parameter replace="ICON_PATH" by="${ICON_PATH}" />
            <parameter replace="ModelRepresentationChannel" uid="ModelRepresentationChannel" />
            <parameter replace="ModelDisplayChannel" uid="ModelDisplayChannel" />
        </service>

        <service uid="ActionSnapshotVR" type="::uiVisu::action::SSnapshot" />

        <!-- Generic Scene VR -->
        <service uid="vr" type="::fwRenderVTK::SRender" autoConnect="yes">
            <in key="imageKey" uid="${image}" />
            <in key="modelSeries" uid="optionalModelSeries" optional="yes"/>
            <inout key="TFSelections" uid="TFSelections" />
            <scene>

                <picker id="negato1default" vtkclass="fwVtkCellPicker" />

                <renderer id="default" background="0.0" />

                <adaptor id="snapshot1" uid="snapshotUID" class="::visuVTKAdaptor::Snapshot" objectId="self">
                    <config renderer="default" />
                </adaptor>

                <adaptor id="Interactor1" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                    <config renderer="default" style="InteractorStyle3DForNegato" />
                </adaptor>

                <adaptor id="Image3DCursor" class="::visuVTKAdaptor::Image3DCursor" objectId="imageKeyCursor">
                    <config renderer="default" />
                </adaptor>

                <adaptor id="modelSeriesAdaptor" uid="modelSeriesAdaptorUid" class="::visuVTKAdaptor::ModelSeries" objectId="modelSeries">
                    <config renderer="default" picker="negato1default" autoresetcamera="no" />
                </adaptor>

                <adaptor id="VolumeScene3DA" uid="VolumeScene3DA" class="::visuVTKVRAdaptor::Volume" objectId="imageKey">
                    <config renderer="default" selectedTFKey="SelectedTF" tfSelectionFwID="TFSelections" />
                </adaptor>

                <adaptor id="nameAdaptor" class="::visuVTKAdaptor::Text" objectId="imageKey">
                    <config renderer="default" text="${patient_name}" fontSize="15" hAlign="right" vAlign="top" />
                </adaptor>

                <proxy channel="ModelRepresentationChannel" waitForKey="modelSeries">
                    <slot>modelSeriesAdaptorUid/updateNormalMode</slot>
                </proxy>

                <proxy channel="ModelDisplayChannel" waitForKey="modelSeries">
                    <slot>modelSeriesAdaptorUid/showReconstructions</slot>
                </proxy>

                <connect>
                    <signal>ActionSnapshotVR/snapped</signal>
                    <slot>snapshotUID/snap</slot>
                </connect>

            </scene>
        </service>

        <service uid="Scene2D" type="::scene2D::Render" autoConnect="yes">

            <in key="imageKey" uid="${image}" />
            <in key="histogram" uid="Histogram" />
            <inout key="histogramPoint" uid="HistogramPoint" />
            <inout key="viewport" uid="Viewport" />
            <inout key="TFSelections" uid="TFSelections" />

            <scene>

                <scene x="-1100" y="-1.1" width="2400" height="1.2" antialiasing="true" />

                <viewport id="view1" x="-500" y="-1.1" width="500" height="1.2" />

                <axis id="xAxis" origin="0.0" scale="1.0" scaleType="LINEAR" />
                <axis id="yAxis" origin="0.0" scale="-1.0" scaleType="LINEAR" />

                <axis id="axeHistogramY" origin="0.0" scale="-0.000001" scaleType="LINEAR" />

                <adaptor id="grid" class="::scene2D::adaptor::Grid2D" objectId="self">
                    <config xMin="-1200" xMax="1500" yMin="0.0" yMax="1.0" xSpacing="100" ySpacing="0.1" opacity="0.25" viewportUID="viewport" color="darkGray" xAxis="xAxis" yAxis="yAxis" zValue="1" />
                </adaptor>

                <adaptor id="abscissa" class="::scene2D::adaptor::Line" objectId="self">
                    <config x1="-1200" x2="1500" y1="0" y2="0" color="white" xAxis="xAxis" yAxis="yAxis" zValue="2" />
                </adaptor>

                <adaptor id="ordinate" class="::scene2D::adaptor::Line" objectId="self">
                    <config x1="0" x2="0" y1="-0.1" y2="1.2" color="white" xAxis="xAxis" yAxis="yAxis" zValue="3" />
                </adaptor>

                <adaptor id="maxOpacity" class="::scene2D::adaptor::Line" objectId="self">
                    <config x1="-1200" x2="1500" y1="1" y2="1" color="red" xAxis="xAxis" yAxis="yAxis" zValue="4" />
                </adaptor>

                <adaptor id="curvedHistogram" class="::scene2D::adaptor::CurvedHistogram" objectId="histogram">
                    <config xAxis="xAxis" yAxis="axeHistogramY" borderColor="lightGray" innerColor="gray" opacity="0.25" zValue="6" histogramPointUID="histogramPoint" borderWidth="2.0" />
                </adaptor>

                <!-- A graphic cursor that follow histogram's shape according to mouse's cursor -->
                <adaptor id="histogramCursor" class="::scene2D::adaptor::HistogramCursor" objectId="histogram">
                    <config xAxis="xAxis" yAxis="axeHistogramY" color="blue" borderColor="gray" zValue="9" pointSize="16" viewportUID="viewport" histogramPointUID="histogramPoint" />
                </adaptor>

                <adaptor id="histogramValue" class="::scene2D::adaptor::HistogramValue" objectId="histogram">
                    <config xAxis="xAxis" yAxis="axeHistogramY" zValue="12" fontSize="6" viewportUID="viewport" histogramPointUID="histogramPoint" />
                </adaptor>

                <adaptor id="tf2" class="::scene2D::adaptor::TransferFunction" objectId="imageKey">
                    <config lineColor="lightGray" circleColor="lightGray" xAxis="xAxis" yAxis="yAxis" zValue="7" viewportUID="viewport" selectedTFKey="SelectedTF" tfSelectionFwID="TFSelections" />
                </adaptor>

                <adaptor id="viewportRangeUpdater" class="::scene2D::adaptor::ViewportUpdater" objectId="viewport">
                    <config xAxis="xAxis" yAxis="yAxis" zValue="9" />
                </adaptor>

                <adaptor id="scaleValuesLeft" class="::scene2D::adaptor::ScaleValues" objectId="self">
                    <config min="0.0" max="1.0" interval="0.1" fontSize="7" align="left" unit="%" viewportUID="viewport" color="darkGray" xAxis="xAxis" yAxis="yAxis" zValue="11" />
                </adaptor>

                <adaptor id="axisLeft" class="::scene2D::adaptor::Axis" objectId="self">
                    <config min="0.0" max="1.0" interval="0.1" align="left" tickSize="5" viewportUID="viewport" color="darkGray" xAxis="xAxis" yAxis="yAxis" zValue="11" />
                </adaptor>

                <adaptor id="scaleValuesBottom" class="::scene2D::adaptor::ScaleValues" objectId="self">
                    <config min="-1024" max="1024" interval="200" fontSize="7" align="bottom" viewportUID="viewport" color="darkGray" xAxis="xAxis" yAxis="yAxis" zValue="11" />
                </adaptor>

                <adaptor id="axisBottom" class="::scene2D::adaptor::Axis" objectId="self">
                    <config min="-1024" max="1024" interval="100" align="bottom" tickSize="5" viewportUID="viewport" color="darkGray" xAxis="xAxis" yAxis="yAxis" zValue="11" />
                </adaptor>

            </scene>

        </service>

        <service uid="Scene2D_Shutter" type="::scene2D::Render" autoConnect="yes">
            <in key="histogram" uid="Histogram" />
            <inout key="viewport" uid="Viewport" />

            <scene>

                <scene x="-1100" y="-1.1" width="2400" height="1.2" />

                <viewport id="view1" x="-1100" y="-1.1" width="2400" height="1.2" />

                <axis id="xAxis" origin="0.0" scale="1.0" scaleType="LINEAR" />
                <axis id="yAxis" origin="0.0" scale="-1.0" scaleType="LINEAR" />

                <axis id="axeHistogramY" origin="0.0" scale="-0.000001" scaleType="LINEAR" />

                <adaptor id="shutterGrid" class="::scene2D::adaptor::Grid2D" objectId="self">
                    <config xMin="-1200" xMax="1400" yMin="-0.7" yMax="1.7" xSpacing="200" ySpacing="0.2" viewportUID="viewport" color="darkGray" xAxis="xAxis" yAxis="yAxis" zValue="1" />
                </adaptor>

                <adaptor id="shutterAbscissa" class="::scene2D::adaptor::Line" objectId="self">
                    <config x1="-1200" x2="1400" y1="0" y2="0" color="white" xAxis="xAxis" yAxis="yAxis" zValue="2" />
                </adaptor>

                <adaptor id="shutterOrdinate" class="::scene2D::adaptor::Line" objectId="self">
                    <config x1="0" x2="0" y1="-0.1" y2="1.2" color="white" xAxis="xAxis" yAxis="yAxis" zValue="3" />
                </adaptor>

                <adaptor id="shutterHistogram" class="::scene2D::adaptor::Histogram" objectId="histogram">
                    <config color="green" xAxis="xAxis" yAxis="axeHistogramY" zValue="4" />
                </adaptor>

                <adaptor id="viewportRangeSelector" class="::scene2D::adaptor::ViewportRangeSelector" objectId="viewport">
                    <config xAxis="xAxis" yAxis="yAxis" zValue="5" initialWidth="1200" initialPos="-700" />
                </adaptor>

            </scene>

        </service>

        <!-- Services working on input image -->
        <service uid="LockImageSrv" type="::ctrlMemory::LockDumpSrv" >
            <in key="image" uid="${image}" />
        </service>

        <service uid="MedicalImageSrv" type="::ctrlSelection::MedicalImageSrv" >
            <inout key="image" uid="${image}" />
        </service>

        <service uid="cfgNegato" type="::fwServices::SConfigController">
            <appConfig id="2DNegatoWithTF" />
            <inout key="image" uid="${image}" />
            <inout key="TFSelections" uid="TFSelections" />
            <parameter replace="selectedTFKey" by="SelectedTF" />
            <parameter replace="patient_name" by="${patient_name}" />
            <parameter replace="WID_PARENT" uid="view_negato" />
            <parameter replace="CrossTypeChannel" uid="crossTypeChannel" />
        </service>

        <service uid="ActionHideCross" type="::uiVisu::action::CrossTypeAction">
            <in key="image" uid="${image}" />
            <crossType>hide</crossType>
        </service>

        <service uid="ActionShowNormalCross" type="::uiVisu::action::CrossTypeAction">
            <in key="image" uid="${image}" />
            <crossType>half</crossType>
            <state active="true" />
        </service>

        <service uid="ActionShowFullCross" type="::uiVisu::action::CrossTypeAction">
            <in key="image" uid="${image}" />
            <crossType>full</crossType>
        </service>

        <service uid="ActionShowHideBoxWidget" type="::gui::action::SBooleanSlotCaller">
            <slots>
                <slot>VolumeScene3DA/activateBoxClipping</slot>
            </slots>
            <state active="true" />
        </service>

        <service uid="ActionResetBoxWidget" type="::gui::action::SSlotCaller">
            <slots>
                <slot>VolumeScene3DA/resetBoxWidget</slot>
            </slots>
        </service>

        <!-- Services working on TF -->

        <!-- This manager adds/removes a field (m_transferFunctionCompositeId) on Image (image) -->
        <service uid="fieldMgr" type="::gui::action::SPushField" >
            <inout key="source" uid="${image}" />
            <out key="destination" uid="TFSet" />
            <push field="m_transferFunctionCompositeId" />
        </service>

        <service uid="tfm" type="::uiTF::TransferFunctionEditor" >
            <inout key="transferFunctions" uid="TFSet" />
            <inout key="TFSelections" uid="TFSelections" />
            <config selectedTFKey="SelectedTF" />
        </service>

        <service uid="computeHistogram" type="::scene2D::processing::SComputeHistogram" autoConnect="yes" worker="COMPUTING_THREAD">
            <in key="image" uid="${image}" />
            <inout key="histogram" uid="Histogram" />
            <binsWidth>5.0</binsWidth>
        </service>
<!--
        <item key="LightSelection">
            <object uid="LightSelection" type="::fwData::Composite">

                <service uid="LightSwapper" type="::ctrlSelection::manager::SwapperSrv" autoConnect="yes">
                    <mode type="stop" />
                    <config>
                        <object uid="selectedLight" type="::fwData::Composite">
                        </object>
                    </config>
                </service>

            </object>
        </item>-->

        <connect channel="crossTypeChannel">
            <signal>ActionHideCross/crossTypeModified</signal>
            <signal>ActionShowNormalCross/crossTypeModified</signal>
            <signal>ActionShowFullCross/crossTypeModified</signal>
        </connect>

        <!-- START AND STOP SERVICES -->
        <start uid="computeHistogram" />
        <start uid="LockImageSrv" />
        <start uid="MedicalImageSrv" />
        <start uid="mainView" />
        <start uid="Scene2D_Shutter" />
        <start uid="Scene2D" />
        <start uid="vr" />
        <start uid="cfgNegato" />
        <start uid="fieldMgr" />

        <update uid="fieldMgr" />

    </config>
</extension>
